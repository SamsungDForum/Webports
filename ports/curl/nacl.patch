diff --git a/lib/curl_setup.h b/lib/curl_setup.h
--- a/lib/curl_setup.h
+++ b/lib/curl_setup.h
@@ -683,4 +683,11 @@ int netware_init(void);
 #define S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)
 #endif

+#ifdef __native_client__
+// libnacl.a defines a symbol "getpwuid", which is already defined in libc.a,
+// what causes linker errors in some cases.
+// https://groups.google.com/forum/#!topic/native-client-discuss/YbxoVXVGzI8
+#undef HAVE_GETPWUID
+#endif
+
 #endif /* HEADER_CURL_SETUP_H */
diff --git a/lib/hostip4.c b/lib/hostip4.c
--- a/lib/hostip4.c
+++ b/lib/hostip4.c
@@ -115,6 +115,12 @@ Curl_addrinfo *Curl_getaddrinfo(struct connectdata *conn,
 
 #if defined(CURLRES_IPV4) && !defined(CURLRES_ARES)
 
+#ifdef __native_client__
+// nacl_io does not yet support gethostbyname_r().
+// TODO(sbc): remove this once it is added to nacl_io: http://crbug.com/387474
+#undef HAVE_GETHOSTBYNAME_R
+#endif
+
 /*
  * Curl_ipv4_resolve_r() - ipv4 threadsafe resolver function.
  *
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -749,7 +749,7 @@ clean-binPROGRAMS:
 
 curl$(EXEEXT): $(curl_OBJECTS) $(curl_DEPENDENCIES) $(EXTRA_curl_DEPENDENCIES) 
 	@rm -f curl$(EXEEXT)
-	$(AM_V_CCLD)$(curl_LINK) $(curl_OBJECTS) $(curl_LDADD) $(LIBS)
+	$(AM_V_CCLD)$(curl_LINK) $(curl_OBJECTS) $(curl_LDADD) $(LIBS) $(EXTRA_LIBS)
 
 mostlyclean-compile:
 	-rm -f *.$(OBJEXT)
diff --git a/lib/mk-ca-bundle.pl b/lib/mk-ca-bundle.pl
--- a/lib/mk-ca-bundle.pl
+++ b/lib/mk-ca-bundle.pl
@@ -293,7 +293,7 @@ if($curl && !$opt_n) {
   $https =~ s/^http:/https:/;
   report "Get certdata over HTTPS with curl!";
   my $quiet = $opt_q ? "-s" : "";
-  my @out = `curl -w %{response_code} $quiet -O $https`;
+  my @out = `curl -k -w %{response_code} $quiet -O $https`;
   if(@out && $out[0] == 200) {
     $fetched = 1;
   } else {
